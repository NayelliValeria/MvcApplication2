//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


namespace MvcApplication2.Models
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations;
    using System.Configuration;
    using System.Data;
    using System.Data.SqlClient;

    public partial class reclutador
    {
        public int idReclutador { get; set; }
        
        [Required]
        [StringLength(10)]
        [Display(Name = "usuario")]
        public string usuario { get; set; }

        [Required]
        [StringLength(10)]
        [DataType(DataType.Password)]
        [Display(Name = "contraseña")]
        public string password { get; set; }

        public int idPersona { get; set; }
        public int permisos { get; set; }
        public bool rememberMe { get; set; }
    
        public virtual candidato candidato { get; set; }
        public virtual persona persona { get; set; }


        //<summary>Buscar al usuario en la base de datos</summary>
        //<param name = "user"> nombre de usuario </param>
        //<param name = "pass"> contraseña del usuario </param>
        //<returns> true si es correcto, false en caso contrario </returns>
        public bool validar( string user, string pass)
        {
            var cn = new SqlConnection(ConfigurationManager.ConnectionStrings["RecluITEntities1"].ConnectionString);
            cn.Open();

            string sp = "inciarSesion";
            var comando = new SqlCommand(sp, cn);
            comando.CommandType = CommandType.StoredProcedure;
            
            SqlParameter u = new SqlParameter("@user", SqlDbType.NChar, 10);
            u.Value = user;
            u.Direction = ParameterDirection.Input;
            comando.Parameters.Add(u);

            SqlParameter p = new SqlParameter("@pass", SqlDbType.NChar, 10);
            p.Value = pass;
            p.Direction = ParameterDirection.Input;

            SqlParameter r = new SqlParameter("@perm", SqlDbType.Int);
            r.Direction = ParameterDirection.Output;

            SqlDataReader reader = comando.ExecuteReader();
            if (reader.HasRows)
            {
                permisos = (int)r.Value;
                return true;
            }
            else { return false; }
        }
    }
}
